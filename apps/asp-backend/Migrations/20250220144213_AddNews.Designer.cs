// <auto-generated />
using System;
using EtsZemun.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EtsZemun.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250220144213_AddNews")]
    partial class AddNews
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EtsZemun.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DayOfAward")
                        .HasColumnType("date");

                    b.Property<string>("ExternalLink")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Awards");
                });

            modelBuilder.Entity("EtsZemun.Models.AwardTranslation", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<string>("Competition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Student")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LanguageCode", "AwardId");

                    b.HasIndex("AwardId");

                    b.ToTable("AwardTranslations");
                });

            modelBuilder.Entity("EtsZemun.Models.EducationalProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("EducationalProfiles");
                });

            modelBuilder.Entity("EtsZemun.Models.EducationalProfileGeneralSubject", b =>
                {
                    b.Property<int>("EducationalProfileId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.Property<int>("PerWeek")
                        .HasColumnType("integer");

                    b.HasKey("EducationalProfileId", "SubjectId", "Year");

                    b.HasIndex("SubjectId");

                    b.HasIndex("Year");

                    b.HasIndex("Year", "EducationalProfileId");

                    b.ToTable("EducationalProfileGeneralSubjects");
                });

            modelBuilder.Entity("EtsZemun.Models.EducationalProfileVocationalSubject", b =>
                {
                    b.Property<int>("EducationalProfileId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.Property<int>("PerWeek")
                        .HasColumnType("integer");

                    b.HasKey("EducationalProfileId", "SubjectId", "Year");

                    b.HasIndex("SubjectId");

                    b.ToTable("EducationalProfileVocationalSubjects");
                });

            modelBuilder.Entity("EtsZemun.Models.Language", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("EtsZemun.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PreviewImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.ToTable("News");
                });

            modelBuilder.Entity("EtsZemun.Models.NewsImage", b =>
                {
                    b.Property<int>("NewsId")
                        .HasColumnType("integer");

                    b.Property<int>("ImageId")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NewsId", "ImageId");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsImages");
                });

            modelBuilder.Entity("EtsZemun.Models.NewsTranslation", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<int>("NewsId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Markup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LanguageCode", "NewsId");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsTranslations");
                });

            modelBuilder.Entity("EtsZemun.Models.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateObtained")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("EtsZemun.Models.QualificationTranslation", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<int>("QualificationId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LanguageCode", "QualificationId");

                    b.HasIndex("QualificationId");

                    b.ToTable("QualificationTranslations");
                });

            modelBuilder.Entity("EtsZemun.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EtsZemun.Models.SubjectTranslation", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SubjectId", "LanguageCode");

                    b.HasIndex("LanguageCode");

                    b.ToTable("SubjectTranslations");
                });

            modelBuilder.Entity("EtsZemun.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly?>("StartOfOpenOfficeHoursFirstShift")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly?>("StartOfOpenOfficeHoursSecondShift")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("EtsZemun.Models.TeacherSubject", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("EtsZemun.Models.TeacherTranslation", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LanguageCode", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherTranslations");
                });

            modelBuilder.Entity("EtsZemun.Models.Award", b =>
                {
                    b.HasOne("EtsZemun.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EtsZemun.Models.AwardTranslation", b =>
                {
                    b.HasOne("EtsZemun.Models.Award", null)
                        .WithMany("Translations")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtsZemun.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtsZemun.Models.EducationalProfileGeneralSubject", b =>
                {
                    b.HasOne("EtsZemun.Models.EducationalProfile", "Profile")
                        .WithMany("GeneralSubjects")
                        .HasForeignKey("EducationalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtsZemun.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EtsZemun.Models.EducationalProfileVocationalSubject", b =>
                {
                    b.HasOne("EtsZemun.Models.EducationalProfile", "Profile")
                        .WithMany("VocationalSubjects")
                        .HasForeignKey("EducationalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtsZemun.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EtsZemun.Models.NewsImage", b =>
                {
                    b.HasOne("EtsZemun.Models.News", null)
                        .WithMany("Images")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtsZemun.Models.NewsTranslation", b =>
                {
                    b.HasOne("EtsZemun.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtsZemun.Models.News", null)
                        .WithMany("Translations")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtsZemun.Models.Qualification", b =>
                {
                    b.HasOne("EtsZemun.Models.Teacher", "Teacher")
                        .WithMany("Qualifications")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EtsZemun.Models.QualificationTranslation", b =>
                {
                    b.HasOne("EtsZemun.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtsZemun.Models.Qualification", null)
                        .WithMany("Translations")
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtsZemun.Models.SubjectTranslation", b =>
                {
                    b.HasOne("EtsZemun.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtsZemun.Models.Subject", null)
                        .WithMany("Translations")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtsZemun.Models.TeacherSubject", b =>
                {
                    b.HasOne("EtsZemun.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EtsZemun.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("EtsZemun.Models.TeacherTranslation", b =>
                {
                    b.HasOne("EtsZemun.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtsZemun.Models.Teacher", null)
                        .WithMany("Translations")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtsZemun.Models.Award", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("EtsZemun.Models.EducationalProfile", b =>
                {
                    b.Navigation("GeneralSubjects");

                    b.Navigation("VocationalSubjects");
                });

            modelBuilder.Entity("EtsZemun.Models.News", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("EtsZemun.Models.Qualification", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("EtsZemun.Models.Subject", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("EtsZemun.Models.Teacher", b =>
                {
                    b.Navigation("Qualifications");

                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
